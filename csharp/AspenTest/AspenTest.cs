using NUnit.Framework;
using EightAmps;

namespace AspenTest
{
    public class Tests
    {
        private Aspen Instance;
        private FakeDevice device;

        [SetUp]
        public void Setup()
        {
            device = new FakeDevice();
            Instance = new Aspen();
        }

        [Test]
        public void TestIsInstantiable()
        {
            Assert.IsNotNull(Instance);
        }

        [Test]
        public void TestShouldNotUpdateWithHex()
        {
            var shouldUpdate = Instance.ShouldUpdateFirmware("fixtures/invalid.hex");
            Assert.AreEqual(shouldUpdate, DfuResponse.SHOULD_UPDATE);
        }

        [Test]
        public void TestShouldUpdateWithDfu()
        {
            var shouldUpdate = Instance.ShouldUpdateFirmware("fixtures/Aspen-v1.3.dfu");
            Assert.AreEqual(shouldUpdate, DfuResponse.SHOULD_UPDATE);
        }

        [Test]
        public void TestGetFirmwareVersionWithDfu()
        {
            var version = Instance.GetFirmwareVersionFromDfu(@"fixtures\Aspen-v1.2.dfu");
            Assert.AreEqual(1, version.Major);
            Assert.AreEqual(2, version.Minor);
        }

        [Test]
        public void TestGetFirmwareVersionWithLargeNumbers()
        {
            var version = Instance.GetFirmwareVersionFromDfu(@"fixtures\Aspen-v120.254.dfu");
            Assert.AreEqual(120, version.Major);
            Assert.AreEqual(254, version.Minor);
        }

        [Test]
        public void TestShouldUpdate()
        {
            var shouldUpdate = Instance.ShouldUpdateFirmware("fixtures/Aspen-v1.2.dfu");
            Assert.AreEqual(shouldUpdate, DfuResponse.SHOULD_UPDATE);
        }
    }
}