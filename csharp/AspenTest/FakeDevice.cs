using DeviceProgramming.Dfu;

namespace AspenTest
{
    class FakeDevice : Device
    {
        public override Identification Info => throw new System.NotImplementedException();

        public override FunctionalDescriptor DfuDescriptor => throw new System.NotImplementedException();

        protected override byte NumberOfAlternateSettings => throw new System.NotImplementedException();

        protected override byte AlternateSetting { get => throw new System.NotImplementedException(); set => throw new System.NotImplementedException(); }

        public override void Close()
        {
            throw new System.NotImplementedException();
        }

        public override bool IsOpen()
        {
            throw new System.NotImplementedException();
        }

        protected override void BusReset()
        {
            throw new System.NotImplementedException();
        }

        protected override void ControlTransfer(Request request, ushort value = 0)
        {
            throw new System.NotImplementedException();
        }

        protected override void ControlTransfer(Request request, ushort value, byte[] outdata)
        {
            throw new System.NotImplementedException();
        }

        protected override void ControlTransfer(Request request, ushort value, ref byte[] indata)
        {
            throw new System.NotImplementedException();
        }

        protected override string GetString(byte iString)
        {
            throw new System.NotImplementedException();
        }

        protected override byte iAlternateSetting(byte altSetting)
        {
            throw new System.NotImplementedException();
        }
    }
}
